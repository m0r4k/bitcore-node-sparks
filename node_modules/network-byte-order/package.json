{
  "_args": [
    [
      "network-byte-order@~0.2.0",
      "/home/z3r0/Documents/repo/mynode/sparkscore-node/node_modules/socks5-client"
    ]
  ],
  "_from": "network-byte-order@>=0.2.0 <0.3.0",
  "_id": "network-byte-order@0.2.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/network-byte-order",
  "_npmUser": {
    "email": "m@m.cg",
    "name": "mcg"
  },
  "_npmVersion": "1.3.8",
  "_phantomChildren": {},
  "_requested": {
    "name": "network-byte-order",
    "raw": "network-byte-order@~0.2.0",
    "rawSpec": "~0.2.0",
    "scope": null,
    "spec": ">=0.2.0 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/socks5-client"
  ],
  "_resolved": "https://registry.npmjs.org/network-byte-order/-/network-byte-order-0.2.0.tgz",
  "_shasum": "6ac11bf44bf610daeddbe90a09a5c817c6e0d2b3",
  "_shrinkwrap": null,
  "_spec": "network-byte-order@~0.2.0",
  "_where": "/home/z3r0/Documents/repo/mynode/sparkscore-node/node_modules/socks5-client",
  "bugs": {
    "url": "https://github.com/mattcg/network-byte-order/issues"
  },
  "contributors": [
    {
      "name": "Matthew Caruana Galizia",
      "email": "m@m.cg"
    }
  ],
  "dependencies": {},
  "description": "htonl, htons, ntohl, ntohs - convert values between host and network byte order.",
  "devDependencies": {
    "coveralls": "2.x",
    "jscoverage": "0.x",
    "mocha": "1.x",
    "mocha-lcov-reporter": "0.x"
  },
  "directories": {},
  "dist": {
    "shasum": "6ac11bf44bf610daeddbe90a09a5c817c6e0d2b3",
    "tarball": "https://registry.npmjs.org/network-byte-order/-/network-byte-order-0.2.0.tgz"
  },
  "homepage": "https://github.com/mattcg/network-byte-order",
  "implements": [
    "CommonJS/Modules/1.0"
  ],
  "keywords": [
    "byte order",
    "convert",
    "endian",
    "endianness",
    "htonl",
    "htons",
    "ntohl",
    "ntohs"
  ],
  "licenses": [
    {
      "type": "Apache License, Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  ],
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "mcg",
      "email": "m@m.cg"
    }
  ],
  "name": "network-byte-order",
  "optionalDependencies": {},
  "readme": "# JavaScript implementation of htonl, htons, ntohl, ntohs #\n\n[![Build Status](https://travis-ci.org/mattcg/network-byte-order.png?branch=master)](https://travis-ci.org/mattcg/network-byte-order)\n[![Coverage Status](https://coveralls.io/repos/mattcg/network-byte-order/badge.png)](https://coveralls.io/r/mattcg/network-byte-order)\n\nThese routines are used for converting values between host and [network byte order](http://en.wikipedia.org/wiki/Endianness#Endianness_in_networking).\n\nDerived from [an implementation](http://blog.couchbase.com/starting-membase-nodejs) by Membase, Inc.\n\n## Usage ##\n\n### htonl(b, i, v) ###\n\nThe `htonl()` function converts the given unsigned 32-bit (long) integer from host byte order to network byte order (Little-Endian to Big-Endian).\n\n`b` is an [`Array`](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array) of octets or a Node.JS [`Buffer`](http://nodejs.org/api/buffer.html).\n`i` is the zero-based index at which to write into `b`.\n`v` is the value to convert.\n\n### htons(b, i, v) ###\n\nThe `htons()` function converts the given unsigned 16-bit (short) integer from host byte order to network byte order (Little-Endian to Big-Endian).\n\n`b` is an [`Array`](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array) of octets or a Node.JS [`Buffer`](http://nodejs.org/api/buffer.html).\n`i` is the zero-based index at which to write into `b`.\n`v` is the value to convert.\n\n### ntohl(b, i) ###\n\nThe `ntohl()` function converts the unsigned 32-bit (long) integer from network byte order to host byte order (Big-Endian to Little-Endian).\n\n`b` is an [`Array`](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array) of octets or a Node.JS [`Buffer`](http://nodejs.org/api/buffer.html) to read the value from.\n`i` is the zero-based index at which to read from `b`.\n\n### ntohlStr(s, i) ###\n\n`s` is a `string` to the read value from.\n`i` is the zero-based index at which to read from `s`.\n\n### ntohs(b, i) ###\n\nThe `ntohs()` function converts the unsigned 16-bit (short) integer from network byte order to host byte order (Big-Endian to Little-Endian).\n\n`b` is an [`Array`](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array) of octets or a Node.JS [`Buffer`](http://nodejs.org/api/buffer.html) to read the value from.\n`i` is the zero-based index at which to read from `b`.\n\n### ntohsStr(s, i) ###\n\n`s` is a `string` to the read value from.\n`i` is the zero-based index at which to read from `s`.\n\n## License ##\n\nLicensed under the [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mattcg/network-byte-order.git"
  },
  "version": "0.2.0"
}
